#! /bin/bash
#Copies sac info from soduser to local directory
#Dan A Frost
#24.3.2021
#UC Berkeley
alias sed='/opt/homebrew/bin/gsed'
shopt -s expand_aliases


#Directories
home_dir=/Users/keyser/Documents/softies/SmKS-main
smks_dir=$home_dir"SmKS/"
cd $smks_dir"eventdir/"


#List of events and components to create directories of
cat <<EOF > "dirlist_"$$
200910072141 BHR
200910072141 BHT
200910072141 BHZ
EOF

while read event comp; do
#-----------------
#Clean up SAC data
#-----------------
#Event to collect
#event=$1
#comp=${2-BHR}


soduser="/home/soduser/Merge.Mw6.50km/"$event"/"      #DO NOT CHANGE
event_subdir=$smks_dir"eventdir/"$event"_new2020_SAC_"$comp"/"

#CHANGE DIRECTORY
\rm -r $event_subdir
mkdir $event_subdir
cd $event_subdir


#COPY OVER SAC FILES TO USE
ls $soduser"/"*".sac" | awk -F"/" '{print $NF}' > $event_subdir"/"$event"_sacfile_ALL.txt"

echo --
head $event_subdir"/"$event"_sacfile_ALL.txt"

eventstation=`ls $soduser"eventStation."$event | sed '/dump/d'`
if [ `echo ${#eventstation[*]}` -ne 1 ]; then
	echo TOO MANY EVENT STATION FILES
	echo ${eventstation[*]}
	exit
fi	
head $eventstation

date=`echo $eventstation | cut -f2 -d'.'`
infile=$event"_sacfile_ALL.txt"
outfile=$event"_sacfile_CUT.txt"
stationfile=$event"_stations_CUT.txt"
echo $event

\rm $outfile
touch $outfile

#FOR TA IN THE LOWER 48, CHANGE FOR STATIONS IN OTHER LOCATIONS
minlat=25
maxlat=50
minlon=-135
maxlon=-60

awk '{if ($9>='$minlat' && $9<='$maxlat' && $10>'$minlon' && $10<='$maxlon') print $9, $10, '$date'"."$2"."$1, $1, $2}' $eventstation > $stationfile

while read slat slon sacname station network; do
#grep $sacname $infile | grep Z| awk '{print $1, '$slat', '$slon'}' >>  $outfile
grep $sacname $infile | grep $comp | awk '{print $1, '$slat', '$slon'}' >>  $outfile
done < $stationfile

echo ==== 
head $outfile
gmt gmtinfo $outfile

awk '{print "'$soduser'"$1}' $outfile | awk '!seen[$1]++' > copyfile_$$
echo --
head copyfile_$$
#
##Copy over sac files to use
cat copyfile_$$ | xargs cp -t $event_subdir
cp $eventstation .
\rm copyfile_$$ $outfile $infile

pwd
cd $smks_dir
done < dirlist_$$


